{
  "sha": "1d4601c2c6952d03fc4dda2b041be9aa8713c0bc",
  "node_id": "MDY6Q29tbWl0ODE1OTg5NjE6MWQ0NjAxYzJjNjk1MmQwM2ZjNGRkYTJiMDQxYmU5YWE4NzEzYzBiYw==",
  "commit": {
    "author": {
      "name": "Matthias Bussonnier",
      "email": "bussonniermatthias@gmail.com",
      "date": "2017-02-16T02:00:32Z"
    },
    "committer": {
      "name": "Brett Cannon",
      "email": "brettcannon@users.noreply.github.com",
      "date": "2017-02-16T02:00:32Z"
    },
    "message": "bpo-29576: add explicit deprecation for importlib.abc.find_loader() and find_module() (GH-32)",
    "tree": {
      "sha": "0a2192efa8f0275e65a84ebef34fd060e72089c7",
      "url": "https://api.github.com/repos/python/cpython/git/trees/0a2192efa8f0275e65a84ebef34fd060e72089c7"
    },
    "url": "https://api.github.com/repos/python/cpython/git/commits/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/python/cpython/commits/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc",
  "html_url": "https://github.com/python/cpython/commit/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc",
  "comments_url": "https://api.github.com/repos/python/cpython/commits/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc/comments",
  "author": {
    "login": "Carreau",
    "id": 335567,
    "node_id": "MDQ6VXNlcjMzNTU2Nw==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Carreau",
    "html_url": "https://github.com/Carreau",
    "followers_url": "https://api.github.com/users/Carreau/followers",
    "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
    "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
    "organizations_url": "https://api.github.com/users/Carreau/orgs",
    "repos_url": "https://api.github.com/users/Carreau/repos",
    "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Carreau/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "brettcannon",
    "id": 54418,
    "node_id": "MDQ6VXNlcjU0NDE4",
    "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brettcannon",
    "html_url": "https://github.com/brettcannon",
    "followers_url": "https://api.github.com/users/brettcannon/followers",
    "following_url": "https://api.github.com/users/brettcannon/following{/other_user}",
    "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions",
    "organizations_url": "https://api.github.com/users/brettcannon/orgs",
    "repos_url": "https://api.github.com/users/brettcannon/repos",
    "events_url": "https://api.github.com/users/brettcannon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brettcannon/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "72dccde884d89586b0cafd990675b7e21720a81f",
      "url": "https://api.github.com/repos/python/cpython/commits/72dccde884d89586b0cafd990675b7e21720a81f",
      "html_url": "https://github.com/python/cpython/commit/72dccde884d89586b0cafd990675b7e21720a81f"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 41,
    "deletions": 7
  },
  "files": [
    {
      "sha": "21621c5ee4eac9de20db20499affe3345f6a2c72",
      "filename": "Doc/whatsnew/3.7.rst",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/python/cpython/blob/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc/Doc/whatsnew/3.7.rst",
      "raw_url": "https://github.com/python/cpython/raw/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc/Doc/whatsnew/3.7.rst",
      "contents_url": "https://api.github.com/repos/python/cpython/contents/Doc/whatsnew/3.7.rst?ref=1d4601c2c6952d03fc4dda2b041be9aa8713c0bc",
      "patch": "@@ -140,6 +140,17 @@ Deprecated\n   ``0x03050400`` and ``0x03060000`` (not including) or ``0x03060100`` or\n   higher.  (Contributed by Serhiy Storchaka in :issue:`27867`.)\n \n+- Methods\n+  :meth:`MetaPathFinder.find_module() <importlib.abc.MetaPathFinder.find_module>`\n+  (replaced by\n+  :meth:`MetaPathFinder.find_spec() <importlib.abc.MetaPathFinder.find_spec>`\n+  ) and\n+  :meth:`PathEntryFinder.find_loader() <importlib.abc.PathEntryFinder.find_loader>`\n+  (replaced by\n+  :meth:`PathEntryFinder.find_spec() <importlib.abc.PathEntryFinder.find_spec>`)\n+  both deprecated in Python 3.4 now emit :exc:`DeprecationWarning`. (Contributed\n+  by Matthias Bussonnier in :issue:`29576`)\n+\n \n Removed\n ======="
    },
    {
      "sha": "f87e20e4045dc30ecd02ec51b880cdf2acacc122",
      "filename": "Lib/importlib/__init__.py",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/python/cpython/blob/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc/Lib/importlib/__init__.py",
      "raw_url": "https://github.com/python/cpython/raw/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc/Lib/importlib/__init__.py",
      "contents_url": "https://api.github.com/repos/python/cpython/contents/Lib/importlib/__init__.py?ref=1d4601c2c6952d03fc4dda2b041be9aa8713c0bc",
      "patch": "@@ -79,7 +79,8 @@ def find_loader(name, path=None):\n     This function is deprecated in favor of importlib.util.find_spec().\n \n     \"\"\"\n-    warnings.warn('Use importlib.util.find_spec() instead.',\n+    warnings.warn('Deprecated since Python 3.4. '\n+                  'Use importlib.util.find_spec() instead.',\n                   DeprecationWarning, stacklevel=2)\n     try:\n         loader = sys.modules[name].__loader__"
    },
    {
      "sha": "661bd76e077f7446f732909cfe16384a1a163d84",
      "filename": "Lib/importlib/abc.py",
      "status": "modified",
      "additions": 19,
      "deletions": 6,
      "changes": 25,
      "blob_url": "https://github.com/python/cpython/blob/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc/Lib/importlib/abc.py",
      "raw_url": "https://github.com/python/cpython/raw/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc/Lib/importlib/abc.py",
      "contents_url": "https://api.github.com/repos/python/cpython/contents/Lib/importlib/abc.py?ref=1d4601c2c6952d03fc4dda2b041be9aa8713c0bc",
      "patch": "@@ -13,6 +13,7 @@\n except ImportError as exc:\n     _frozen_importlib_external = _bootstrap_external\n import abc\n+import warnings\n \n \n def _register(abstract_cls, *classes):\n@@ -34,6 +35,8 @@ class Finder(metaclass=abc.ABCMeta):\n     reimplementations of the import system.  Otherwise, finder\n     implementations should derive from the more specific MetaPathFinder\n     or PathEntryFinder ABCs.\n+\n+    Deprecated since Python 3.3\n     \"\"\"\n \n     @abc.abstractmethod\n@@ -57,11 +60,16 @@ def find_module(self, fullname, path):\n         If no module is found, return None.  The fullname is a str and\n         the path is a list of strings or None.\n \n-        This method is deprecated in favor of finder.find_spec(). If find_spec()\n-        exists then backwards-compatible functionality is provided for this\n-        method.\n+        This method is deprecated since Python 3.4 in favor of\n+        finder.find_spec(). If find_spec() exists then backwards-compatible\n+        functionality is provided for this method.\n \n         \"\"\"\n+        warnings.warn(\"MetaPathFinder.find_module() is deprecated since Python \"\n+                      \"3.4 in favor of MetaPathFinder.find_spec()\"\n+                      \"(available since 3.4)\",\n+                      DeprecationWarning,\n+                      stacklevel=2)\n         if not hasattr(self, 'find_spec'):\n             return None\n         found = self.find_spec(fullname, path)\n@@ -94,10 +102,15 @@ def find_loader(self, fullname):\n         The portion will be discarded if another path entry finder\n         locates the module as a normal module or package.\n \n-        This method is deprecated in favor of finder.find_spec(). If find_spec()\n-        is provided than backwards-compatible functionality is provided.\n-\n+        This method is deprecated since Python 3.4 in favor of\n+        finder.find_spec(). If find_spec() is provided than backwards-compatible\n+        functionality is provided.\n         \"\"\"\n+        warnings.warn(\"PathEntryFinder.find_loader() is deprecated since Python \"\n+                      \"3.4 in favor of PathEntryFinder.find_spec() \"\n+                      \"(available since 3.4)\",\n+                      DeprecationWarning,\n+                      stacklevel=2)\n         if not hasattr(self, 'find_spec'):\n             return None, []\n         found = self.find_spec(fullname)"
    },
    {
      "sha": "db36204e3b4e79ad346ee45ef18237fb16521238",
      "filename": "Lib/test/test_importlib/test_abc.py",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/python/cpython/blob/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc/Lib/test/test_importlib/test_abc.py",
      "raw_url": "https://github.com/python/cpython/raw/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc/Lib/test/test_importlib/test_abc.py",
      "contents_url": "https://api.github.com/repos/python/cpython/contents/Lib/test/test_importlib/test_abc.py?ref=1d4601c2c6952d03fc4dda2b041be9aa8713c0bc",
      "patch": "@@ -163,6 +163,9 @@ def test_invalidate_caches(self):\n         # Calling the method is a no-op.\n         self.ins.invalidate_caches()\n \n+    def test_find_module_warns(self):\n+        with self.assertWarns(DeprecationWarning):\n+            self.ins.find_module('something', None)\n \n (Frozen_MPFDefaultTests,\n  Source_MPFDefaultTests\n@@ -189,6 +192,9 @@ def test_invalidate_caches(self):\n         # Should be a no-op.\n         self.ins.invalidate_caches()\n \n+    def test_find_loader_warns(self):\n+        with self.assertWarns(DeprecationWarning):\n+            self.ins.find_loader('something')\n \n (Frozen_PEFDefaultTests,\n  Source_PEFDefaultTests"
    },
    {
      "sha": "1422627b9052a23850da728af24b812ef9036913",
      "filename": "Misc/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/python/cpython/blob/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc/Misc/NEWS",
      "raw_url": "https://github.com/python/cpython/raw/1d4601c2c6952d03fc4dda2b041be9aa8713c0bc/Misc/NEWS",
      "contents_url": "https://api.github.com/repos/python/cpython/contents/Misc/NEWS?ref=1d4601c2c6952d03fc4dda2b041be9aa8713c0bc",
      "patch": "@@ -229,6 +229,9 @@ Extension Modules\n Library\n -------\n \n+- bpo-29576: Improve some deprecations in importlib. Some deprecated methods\n+  now emit DeprecationWarnings and have better descriptive messages.\n+\n - bpo-29534: Fixed different behaviour of Decimal.from_float()\n   for _decimal and _pydecimal. Thanks Andrew Nester.\n "
    }
  ]
}